{"version":3,"file":"ext-opensave.js","sources":["../../../../node_modules/browser-fs-access/dist/esm/index.js","../../../../src/editor/extensions/ext-opensave/ext-opensave.js","../../../../src/editor/extensions/ext-opensave/locale/en.js","../../../../src/editor/extensions/ext-opensave/locale/fr.js","../../../../src/editor/extensions/ext-opensave/locale/zh-CN.js"],"sourcesContent":["var T=Object.defineProperty;var f=(e,t)=>()=>(e&&(t=e(e=0)),t);var d=(e,t)=>{for(var i in t)T(e,i,{get:t[i],enumerable:!0})};var y={};d(y,{default:()=>E});var E,p=f(()=>{E=async(e=[{}])=>(Array.isArray(e)||(e=[e]),new Promise((t,i)=>{let r=document.createElement(\"input\");r.type=\"file\";let l=[...e.map(s=>s.mimeTypes||[]).join(),e.map(s=>s.extensions||[]).join()].join();r.multiple=e[0].multiple||!1,r.accept=l||\"\";let n=()=>c(i),a=s=>{typeof c==\"function\"&&c(),t(s)},c=e[0].legacySetup&&e[0].legacySetup(a,n,r);r.addEventListener(\"change\",()=>{a(r.multiple?Array.from(r.files):r.files[0])}),r.click()}))});var w={};d(w,{default:()=>I});var N,I,h=f(()=>{N=async e=>{let t=await e.getFile();return t.handle=e,t},I=async(e=[{}])=>{Array.isArray(e)||(e=[e]);let t=[];e.forEach((l,n)=>{t[n]={description:l.description||\"\",accept:{}},l.mimeTypes?l.mimeTypes.map(a=>{t[n].accept[a]=l.extensions||[]}):t[n].accept[\"*/*\"]=l.extensions||[]});let i=await window.showOpenFilePicker({id:e[0].id,startIn:e[0].startIn,types:t,multiple:e[0].multiple||!1,excludeAcceptAllOption:e[0].excludeAcceptAllOption||!1}),r=await Promise.all(i.map(N));return e[0].multiple?r:r[0]}});var o={};d(o,{default:()=>M});var M,A=f(()=>{M=async(e=[{}])=>(Array.isArray(e)||(e=[e]),e[0].recursive=e[0].recursive||!1,new Promise((t,i)=>{let r=document.createElement(\"input\");r.type=\"file\",r.webkitdirectory=!0;let l=()=>a(i),n=c=>{typeof a==\"function\"&&a(),t(c)},a=e[0].legacySetup&&e[0].legacySetup(n,l,r);r.addEventListener(\"change\",()=>{let c=Array.from(r.files);e[0].recursive?e[0].recursive&&e[0].skipDirectory&&(c=c.filter(s=>s.webkitRelativePath.split(\"/\").every(S=>!e[0].skipDirectory({name:S,kind:\"directory\"})))):c=c.filter(s=>s.webkitRelativePath.split(\"/\").length===2),n(c)}),r.click()}))});var x={};d(x,{default:()=>B});var v,B,g=f(()=>{v=async(e,t,i=e.name,r)=>{let l=[],n=[];for await(let a of e.values()){let c=`${i}/${a.name}`;a.kind===\"file\"?n.push(a.getFile().then(s=>(s.directoryHandle=e,s.handle=a,Object.defineProperty(s,\"webkitRelativePath\",{configurable:!0,enumerable:!0,get:()=>c})))):a.kind===\"directory\"&&t&&(!r||!r(a))&&l.push(v(a,t,c,r))}return[...(await Promise.all(l)).flat(),...await Promise.all(n)]},B=async(e={})=>{e.recursive=e.recursive||!1;let t=await window.showDirectoryPicker({id:e.id,startIn:e.startIn});return v(t,e.recursive,void 0,e.skipDirectory)}});var k={};d(k,{default:()=>W});async function $(e,t){let i=e.getReader(),r=new ReadableStream({start(n){return a();async function a(){return i.read().then(({done:c,value:s})=>{if(c){n.close();return}return n.enqueue(s),a()})}}}),l=new Response(r);return i.releaseLock(),new Blob([await l.blob()],{type:t})}var W,P=f(()=>{W=async(e,t={})=>{Array.isArray(t)&&(t=t[0]);let i=document.createElement(\"a\"),r=e;\"body\"in e&&(r=await $(e.body,e.headers.get(\"content-type\"))),i.download=t.fileName||\"Untitled\",i.href=URL.createObjectURL(r);let l=()=>a(reject),n=()=>{typeof a==\"function\"&&a()},a=t.legacySetup&&t.legacySetup(n,l,i);return i.addEventListener(\"click\",()=>{setTimeout(()=>URL.revokeObjectURL(i.href),30*1e3),n(null)}),i.click(),null}});var j={};d(j,{default:()=>q});var q,L=f(()=>{q=async(e,t=[{}],i=null,r=!1)=>{Array.isArray(t)||(t=[t]),t[0].fileName=t[0].fileName||\"Untitled\";let l=[];if(t.forEach((c,s)=>{l[s]={description:c.description||\"\",accept:{}},c.mimeTypes?(s===0&&(e.type?c.mimeTypes.push(e.type):e.headers&&e.headers.get(\"content-type\")&&c.mimeTypes.push(e.headers.get(\"content-type\"))),c.mimeTypes.map(m=>{l[s].accept[m]=c.extensions||[]})):e.type&&(l[s].accept[e.type]=c.extensions||[])}),i)try{await i.getFile()}catch(c){if(i=null,r)throw c}let n=i||await window.showSaveFilePicker({suggestedName:t[0].fileName,id:t[0].id,startIn:t[0].startIn,types:l,excludeAcceptAllOption:t[0].excludeAcceptAllOption||!1}),a=await n.createWritable();return\"stream\"in e?(await e.stream().pipeTo(a),n):\"body\"in e?(await e.body.pipeTo(a),n):(await a.write(blob),await a.close(),n)}});var F=(()=>{if(typeof self==\"undefined\")return!1;if(\"top\"in self&&self!==top)try{top.location+\"\"}catch{return!1}else if(\"showOpenFilePicker\"in self)return\"showOpenFilePicker\";return!1})(),u=F;var U=u?Promise.resolve().then(()=>(h(),w)):Promise.resolve().then(()=>(p(),y));async function _(...e){return(await U).default(...e)}var D=u?Promise.resolve().then(()=>(g(),x)):Promise.resolve().then(()=>(A(),o));async function O(...e){return(await D).default(...e)}var z=u?Promise.resolve().then(()=>(L(),j)):Promise.resolve().then(()=>(P(),k));async function C(...e){return(await z).default(...e)}export{O as directoryOpen,_ as fileOpen,C as fileSave,u as supported};\n// @license Â© 2020 Google LLC. Licensed under the Apache License, Version 2.0.\n","/* globals seConfirm */\n/**\n * @file ext-opensave.js\n *\n * @license MIT\n *\n * @copyright 2020 OptimistikSAS\n *\n */\n\n/**\n   * @type {module:svgcanvas.EventHandler}\n   * @param {external:Window} wind\n   * @param {module:svgcanvas.SvgCanvas#event:saved} svg The SVG source\n   * @listens module:svgcanvas.SvgCanvas#event:saved\n   * @returns {void}\n   */\nimport { fileOpen, fileSave } from 'browser-fs-access'\n\nconst name = 'opensave'\nlet handle = null\n\nconst loadExtensionTranslation = async function (svgEditor) {\n  let translationModule\n  const lang = svgEditor.configObj.pref('lang')\n  try {\n    translationModule = await import(`./locale/${lang}.js`)\n  } catch (_error) {\n    console.warn(`Missing translation (${lang}) for ${name} - using 'en'`)\n    translationModule = await import('./locale/en.js')\n  }\n  svgEditor.i18next.addResourceBundle(lang, 'translation', translationModule.default, true, true)\n}\n\nexport default {\n  name,\n  async init (_S) {\n    const svgEditor = this\n    const { svgCanvas } = svgEditor\n    const { $id, $click } = svgCanvas\n    await loadExtensionTranslation(svgEditor)\n    /**\n    * @param {Event} e\n    * @returns {void}\n    */\n    const importImage = (e) => {\n      $id('se-prompt-dialog').title = this.i18next.t('notification.loadingImage')\n      $id('se-prompt-dialog').setAttribute('close', false)\n      e.stopPropagation()\n      e.preventDefault()\n      const file = (e.type === 'drop') ? e.dataTransfer.files[0] : e.currentTarget.files[0]\n      if (!file) {\n        $id('se-prompt-dialog').setAttribute('close', true)\n        return\n      }\n\n      if (!file.type.includes('image')) {\n        return\n      }\n      // Detected an image\n      // svg handling\n      let reader\n      if (file.type.includes('svg')) {\n        reader = new FileReader()\n        reader.onloadend = (ev) => {\n          const newElement = this.svgCanvas.importSvgString(ev.target.result, true)\n          this.svgCanvas.alignSelectedElements('m', 'page')\n          this.svgCanvas.alignSelectedElements('c', 'page')\n          // highlight imported element, otherwise we get strange empty selectbox\n          this.svgCanvas.selectOnly([newElement])\n          $id('se-prompt-dialog').setAttribute('close', true)\n        }\n        reader.readAsText(file)\n      } else {\n        // bitmap handling\n        reader = new FileReader()\n        reader.onloadend = function ({ target: { result } }) {\n          /**\n              * Insert the new image until we know its dimensions.\n              * @param {Float} imageWidth\n              * @param {Float} imageHeight\n              * @returns {void}\n              */\n          const insertNewImage = (imageWidth, imageHeight) => {\n            const newImage = this.svgCanvas.addSVGElementsFromJson({\n              element: 'image',\n              attr: {\n                x: 0,\n                y: 0,\n                width: imageWidth,\n                height: imageHeight,\n                id: this.svgCanvas.getNextId(),\n                style: 'pointer-events:inherit'\n              }\n            })\n            this.svgCanvas.setHref(newImage, result)\n            this.svgCanvas.selectOnly([newImage])\n            this.svgCanvas.alignSelectedElements('m', 'page')\n            this.svgCanvas.alignSelectedElements('c', 'page')\n            this.topPanel.updateContextPanel()\n            $id('se-prompt-dialog').setAttribute('close', true)\n          }\n          // create dummy img so we know the default dimensions\n          let imgWidth = 100\n          let imgHeight = 100\n          const img = new Image()\n          img.style.opacity = 0\n          img.addEventListener('load', () => {\n            imgWidth = img.offsetWidth || img.naturalWidth || img.width\n            imgHeight = img.offsetHeight || img.naturalHeight || img.height\n            insertNewImage(imgWidth, imgHeight)\n          })\n          img.src = result\n        }\n        reader.readAsDataURL(file)\n      }\n    }\n    // create an input with type file to open the filesystem dialog\n    const imgImport = document.createElement('input')\n    imgImport.type = 'file'\n    imgImport.addEventListener('change', importImage)\n    // dropping a svg file will import it in the svg as well\n    this.workarea.addEventListener('drop', importImage)\n    /**\n     * @fires module:svgcanvas.SvgCanvas#event:ext_onNewDocument\n     * @returns {void}\n     */\n    const clickClear = async function () {\n      const [x, y] = svgEditor.configObj.curConfig.dimensions\n      const ok = await seConfirm(svgEditor.i18next.t('notification.QwantToClear'))\n      if (ok === 'Cancel') {\n        return\n      }\n      svgEditor.leftPanel.clickSelect()\n      svgEditor.svgCanvas.clear()\n      svgEditor.svgCanvas.setResolution(x, y)\n      svgEditor.updateCanvas(true)\n      svgEditor.zoomImage()\n      svgEditor.layersPanel.populateLayers()\n      svgEditor.topPanel.updateContextPanel()\n      svgEditor.topPanel.updateTitle('untitled.svg')\n      svgEditor.svgCanvas.runExtensions('onNewDocument')\n    }\n\n    /**\n     * By default,  this.editor.svgCanvas.open() is a no-op. It is up to an extension\n     *  mechanism (opera widget, etc.) to call `setCustomHandlers()` which\n     *  will make it do something.\n     * @returns {void}\n     */\n    const clickOpen = async function () {\n      // ask user before clearing an unsaved SVG\n      const response = await svgEditor.openPrep()\n      if (response === 'Cancel') { return }\n      svgCanvas.clear()\n      try {\n        const blob = await fileOpen({\n          mimeTypes: ['image/*']\n        })\n        const svgContent = await blob.text()\n        await svgEditor.loadSvgString(svgContent)\n        svgEditor.updateCanvas()\n        handle = blob.handle\n        svgEditor.topPanel.updateTitle(blob.name)\n        svgEditor.svgCanvas.runExtensions('onOpenedDocument', {\n          name: blob.name,\n          lastModified: blob.lastModified,\n          size: blob.size,\n          type: blob.type\n        })\n      } catch (err) {\n        if (err.name !== 'AbortError') {\n          return console.error(err)\n        }\n      }\n    }\n    const b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\n      const byteCharacters = atob(b64Data)\n      const byteArrays = []\n      for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize)\n        const byteNumbers = new Array(slice.length)\n        for (let i = 0; i < slice.length; i++) {\n          byteNumbers[i] = slice.charCodeAt(i)\n        }\n        const byteArray = new Uint8Array(byteNumbers)\n        byteArrays.push(byteArray)\n      }\n      const blob = new Blob(byteArrays, { type: contentType })\n      return blob\n    }\n\n    /**\n     *\n     * @returns {void}\n     */\n    const clickSave = async function (type) {\n      const $editorDialog = $id('se-svg-editor-dialog')\n      const editingsource = $editorDialog.getAttribute('dialog') === 'open'\n      if (editingsource) {\n        svgEditor.saveSourceEditor()\n      } else {\n        // In the future, more options can be provided here\n        const saveOpts = {\n          images: svgEditor.configObj.pref('img_save'),\n          round_digits: 6\n        }\n        // remove the selected outline before serializing\n        svgCanvas.clearSelection()\n        // Update save options if provided\n        if (saveOpts) {\n          const saveOptions = svgCanvas.mergeDeep(svgCanvas.getSvgOption(), saveOpts)\n          for (const [key, value] of Object.entries(saveOptions)) {\n            svgCanvas.setSvgOption(key, value)\n          }\n        }\n        svgCanvas.setSvgOption('apply', true)\n\n        // no need for doctype, see https://jwatt.org/svg/authoring/#doctype-declaration\n        const svg = '<?xml version=\"1.0\"?>\\n' + svgCanvas.svgCanvasToString()\n        const b64Data = svgCanvas.encode64(svg)\n        const blob = b64toBlob(b64Data, 'image/svg+xml')\n        try {\n          if (type === 'save' && handle !== null) {\n            const throwIfExistingHandleNotGood = false\n            handle = await fileSave(blob, {\n              fileName: 'untitled.svg',\n              extensions: ['.svg']\n            }, handle, throwIfExistingHandleNotGood)\n          } else {\n            handle = await fileSave(blob, {\n              fileName: svgEditor.title,\n              extensions: ['.svg']\n            })\n          }\n          svgEditor.topPanel.updateTitle(handle.name)\n          svgCanvas.runExtensions('onSavedDocument', {\n            name: handle.name,\n            kind: handle.kind\n          })\n        } catch (err) {\n          if (err.name !== 'AbortError') {\n            return console.error(err)\n          }\n        }\n      }\n    }\n\n    return {\n      name: svgEditor.i18next.t(`${name}:name`),\n      // The callback should be used to load the DOM with the appropriate UI items\n      callback () {\n        const buttonTemplate = `\n        <se-menu-item id=\"tool_clear\" label=\"opensave.new_doc\" shortcut=\"N\" src=\"new.svg\"></se-menu-item>`\n        svgCanvas.insertChildAtIndex($id('main_button'), buttonTemplate, 0)\n        const openButtonTemplate = '<se-menu-item id=\"tool_open\" label=\"opensave.open_image_doc\" src=\"open.svg\"></se-menu-item>'\n        svgCanvas.insertChildAtIndex($id('main_button'), openButtonTemplate, 1)\n        const saveButtonTemplate = '<se-menu-item id=\"tool_save\" label=\"opensave.save_doc\" shortcut=\"S\" src=\"saveImg.svg\"></se-menu-item>'\n        svgCanvas.insertChildAtIndex($id('main_button'), saveButtonTemplate, 2)\n        const saveAsButtonTemplate = '<se-menu-item id=\"tool_save_as\" label=\"opensave.save_as_doc\" src=\"saveImg.svg\"></se-menu-item>'\n        svgCanvas.insertChildAtIndex($id('main_button'), saveAsButtonTemplate, 3)\n        const importButtonTemplate = '<se-menu-item id=\"tool_import\" label=\"tools.import_doc\" src=\"importImg.svg\"></se-menu-item>'\n        svgCanvas.insertChildAtIndex($id('main_button'), importButtonTemplate, 4)\n\n        // handler\n        $click($id('tool_clear'), clickClear.bind(this))\n        $click($id('tool_open'), clickOpen.bind(this))\n        $click($id('tool_save'), clickSave.bind(this, 'save'))\n        $click($id('tool_save_as'), clickSave.bind(this, 'saveas'))\n        $click($id('tool_import'), () => imgImport.click())\n      }\n    }\n  }\n}\n","export default {\n  opensave: {\n    new_doc: 'New Image',\n    open_image_doc: 'Open SVG',\n    save_doc: 'Save SVG',\n    save_as_doc: 'Save as SVG'\n  }\n}\n","export default {\n  opensave: {\n    new_doc: 'Nouvelle image',\n    open_image_doc: 'Ouvrir le SVG',\n    save_doc: 'Enregistrer l\\'image',\n    save_as_doc: 'Enregistrer en tant qu\\'image'\n  }\n}\n","export default {\n  opensave: {\n    new_doc: 'æ°å¾ç',\n    open_image_doc: 'æå¼ SVG',\n    save_doc: 'ä¿å­å¾å',\n    save_as_doc: 'å¦å­ä¸ºå¾å'\n  }\n}\n"],"names":["T","Object","defineProperty","f","e","t","d","i","get","enumerable","y","default","E","p","async","Array","isArray","Promise","r","document","createElement","type","l","map","s","mimeTypes","join","extensions","multiple","accept","a","c","legacySetup","addEventListener","from","files","click","w","I","N","h","getFile","handle","forEach","n","description","window","showOpenFilePicker","id","startIn","types","excludeAcceptAllOption","all","o","M","A","recursive","webkitdirectory","skipDirectory","filter","webkitRelativePath","split","every","S","name","kind","length","x","B","v","g","values","push","then","directoryHandle","configurable","flat","showDirectoryPicker","k","$","getReader","ReadableStream","start","read","_ref","done","value","enqueue","close","Response","releaseLock","Blob","blob","W","P","body","headers","download","fileName","href","URL","createObjectURL","reject","setTimeout","revokeObjectURL","j","q","L","m","showSaveFilePicker","suggestedName","createWritable","stream","pipeTo","write","u","self","top","location","U","resolve","z","C","loadExtensionTranslation","svgEditor","translationModule","lang","configObj","pref","__variableDynamicImportRuntime0__","_error","console","warn","i18next","addResourceBundle","_S","this","svgCanvas","$id","$click","importImage","title","setAttribute","stopPropagation","preventDefault","file","dataTransfer","currentTarget","includes","reader","FileReader","onloadend","ev","newElement","importSvgString","target","result","alignSelectedElements","selectOnly","readAsText","insertNewImage","imageWidth","imageHeight","newImage","addSVGElementsFromJson","element","attr","width","height","getNextId","style","setHref","topPanel","updateContextPanel","imgWidth","imgHeight","img","Image","opacity","offsetWidth","naturalWidth","offsetHeight","naturalHeight","src","readAsDataURL","imgImport","workarea","clickClear","curConfig","dimensions","seConfirm","leftPanel","clickSelect","clear","setResolution","updateCanvas","zoomImage","layersPanel","populateLayers","updateTitle","runExtensions","clickOpen","openPrep","_","fileOpen","svgContent","text","loadSvgString","lastModified","size","err","error","clickSave","getAttribute","saveSourceEditor","saveOpts","images","round_digits","clearSelection","saveOptions","mergeDeep","getSvgOption","key","entries","setSvgOption","svg","svgCanvasToString","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","charCodeAt","byteArray","Uint8Array","b64toBlob","encode64","throwIfExistingHandleNotGood","fileSave","callback","insertChildAtIndex","bind","opensave","new_doc","open_image_doc","save_doc","save_as_doc"],"mappings":"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"}